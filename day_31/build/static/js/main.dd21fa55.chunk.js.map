{"version":3,"sources":["components/Product.jsx","slices/productListSlice.js","components/Products.jsx","slices/cartListSlice.js","components/ProductDetails.jsx","components/Cart.jsx","App.jsx","store.js","index.js"],"names":["Product","id","title","price","description","image","to","className","Card","src","alt","style","margin","slice","fetchProducts","createAsyncThunk","a","fetch","res","json","productListSlice","createSlice","name","initialState","reducers","increment","state","action","newState","map","product","push","JSON","parse","stringify","payload","decrement","extraReducers","builder","addCase","fulfilled","actions","Products","products","useSelector","dispatch","useDispatch","length","cartListSlice","addToCart","includes","deleteFromCart","filter","ele","ProductDetails","show","setShow","useParams","useEffect","Container","Row","Col","height","width","Button","variant","size","onClick","quantity","Cart","toggleShow","handleClose","cartProducts","Offcanvas","onHide","scroll","placement","Header","closeButton","Title","Body","App","useState","Navbar","bg","Brand","s","exact","path","component","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd21fa55.chunk.js","sourcesContent":["import Card from \"react-bootstrap/Card\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Product = ({ id, title, price, description, image }) => {\r\n  return (\r\n    <Link to={`/${id}`} className=\"links\">\r\n      <Card className=\"card\">\r\n        <img src={image} alt=\"product\" style={{ margin: \"auto\" }}></img>\r\n        <h4>{title.slice(0, 20)}</h4>\r\n        <p>{description.slice(0, 50)}</p>\r\n        <h5>Price: â‚¹{price}</h5>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n\r\n//\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchProducts = createAsyncThunk(\"products/fetchproducts\", async () => {\r\n  const res = await fetch(\"https://fakestoreapi.com/products\");\r\n  return res.json();\r\n});\r\n\r\nconst productListSlice = createSlice({\r\n  name: \"products\",\r\n  initialState: [],\r\n  reducers: {\r\n    increment: (state, action) => {\r\n      const newState = [];\r\n      state.map((product) =>\r\n        newState.push(JSON.parse(JSON.stringify(product)))\r\n      );\r\n      newState[action.payload - 1][\"quantity\"] += 1;\r\n      return newState;\r\n    },\r\n    decrement: (state, action) => {\r\n      const newState = [];\r\n      state.map((product) =>\r\n        newState.push(JSON.parse(JSON.stringify(product)))\r\n      );\r\n      newState[action.payload - 1][\"quantity\"] -= 1;\r\n      return newState;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchProducts.fulfilled, (state, action) => {\r\n      action.payload.map((product) => (product[\"quantity\"] = 1));\r\n      return action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport { fetchProducts };\r\nexport const { increment, decrement } = productListSlice.actions;\r\nexport default productListSlice.reducer;\r\n","/* eslint-disable */\r\nimport Product from \"./Product\";\r\nimport { useEffect } from \"react\";\r\nimport { fetchProducts } from \"../slices/productListSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst Products = () => {\r\n  const products = useSelector((state) => state.products);\r\n  const dispatch = useDispatch();\r\n  if (!products.length) dispatch(fetchProducts());\r\n  return (\r\n    <div className=\"products\">\r\n      {products.length ? (\r\n        products.map((product) => {\r\n          return (\r\n            <Product\r\n              key={product.id}\r\n              id={product.id}\r\n              title={product.title}\r\n              price={product.price}\r\n              description={product.description}\r\n              image={product.image}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <h1>loading...</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartListSlice = createSlice({\r\n  name: \"cartProducts\",\r\n  initialState: [],\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      if (state.includes(action.payload - 1)) return state;\r\n      return [...state, action.payload - 1];\r\n    },\r\n    deleteFromCart: (state, action) => {\r\n      return state.filter((ele) => ele !== action.payload - 1);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, deleteFromCart } = cartListSlice.actions;\r\nexport default cartListSlice.reducer;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\nimport { fetchProducts } from \"../slices/productListSlice\";\r\nimport { addToCart } from \"../slices/cartListSlice\";\r\nimport { increment, decrement } from \"../slices/productListSlice\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst ProductDetails = ({ show, setShow }) => {\r\n  const { id } = useParams();\r\n  const products = useSelector((state) => state.products);\r\n  const product = products[id - 1];\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!products.length) dispatch(fetchProducts());\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {products.length ? (\r\n        <Container style={{ margin: \"40px 20px\" }}>\r\n          {\r\n            <Row>\r\n              <Col>\r\n                <img\r\n                  alt=\"product\"\r\n                  src={product.image}\r\n                  style={{ height: \"400px\", width: \"350px\" }}\r\n                ></img>\r\n              </Col>\r\n              <Col>\r\n                <h1>{product.title}</h1>\r\n                <p>{product.description}</p>\r\n                <h1>â‚¹{product.price}</h1>\r\n                <br></br>\r\n                <div className=\"btns\">\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    size=\"lg\"\r\n                    onClick={() => {\r\n                      dispatch(increment(product.id));\r\n                    }}\r\n                  >\r\n                    +\r\n                  </Button>\r\n                  <div className=\"quantity\">{product.quantity}</div>\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    size=\"lg\"\r\n                    onClick={() => {\r\n                      if (product.quantity !== 1)\r\n                        dispatch(decrement(product.id));\r\n                    }}\r\n                  >\r\n                    -\r\n                  </Button>\r\n                </div>\r\n                <br></br>\r\n                <Button\r\n                  onClick={() => {\r\n                    dispatch(addToCart(product.id));\r\n                    setShow(!show);\r\n                  }}\r\n                >\r\n                  ADD TO CART\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          }\r\n        </Container>\r\n      ) : (\r\n        <h1>Loading...</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { increment, decrement } from \"../slices/productListSlice\";\r\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { deleteFromCart } from \"../slices/cartListSlice\";\r\nimport { Cart4 } from \"react-bootstrap-icons\";\r\nimport { Trash } from \"react-bootstrap-icons\";\r\nconst Cart = ({ show, toggleShow, handleClose, name }) => {\r\n  const products = useSelector((state) => state.products);\r\n  const cartProducts = useSelector((state) => state.cartProducts);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <Button variant=\"light\" onClick={toggleShow} className=\"me-2\">\r\n        <Cart4 />\r\n      </Button>\r\n      <Offcanvas\r\n        show={show}\r\n        onHide={handleClose}\r\n        scroll=\"false\"\r\n        placement=\"end\"\r\n      >\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Your Items</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          {cartProducts.length ? (\r\n            cartProducts.map((id) => {\r\n              return (\r\n                <div key={id} className=\"cart-card\">\r\n                  <img\r\n                    alt=\"product\"\r\n                    src={products[id].image}\r\n                    style={{ height: \"70px\", width: \"80px\", margin: \"30px\" }}\r\n                  ></img>\r\n                  <div>\r\n                    <div>{products[id].title}</div>\r\n                    <div>â‚¹{products[id].price}</div>\r\n                    <br></br>\r\n                    <div>\r\n                      <Button\r\n                        variant=\"secondary\"\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          dispatch(increment(products[id].id));\r\n                        }}\r\n                      >\r\n                        +\r\n                      </Button>\r\n                      <div className=\"quantity\">{products[id].quantity}</div>\r\n                      <Button\r\n                        variant=\"secondary\"\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          dispatch(decrement(products[id].id));\r\n                        }}\r\n                      >\r\n                        -\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"light\"\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          dispatch(deleteFromCart(products[id].id));\r\n                        }}\r\n                      >\r\n                        <Trash />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <p>Cart is empty.</p>\r\n          )}\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Products from \"./components/Products\";\nimport ProductDetails from \"./components/ProductDetails\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport \"./App.css\";\n\nimport Cart from \"./components/Cart\";\n\nimport { useState } from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const toggleShow = () => setShow((s) => !s);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Container>\n            <Navbar.Brand>\n              <Link to=\"/\" className=\"links\">\n                AniCart\n              </Link>\n            </Navbar.Brand>\n            <Cart\n              show={show}\n              toggleShow={toggleShow}\n              handleClose={handleClose}\n              name=\"cart\"\n            ></Cart>\n          </Container>\n        </Navbar>\n      </div>\n\n      <Switch>\n        <Route exact path=\"/\" component={Products}></Route>\n        <Route exact path=\"/:id\">\n          <ProductDetails show={show} setShow={setShow} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport productListSlice from \"./slices/productListSlice\";\r\nimport cartListSlice from \"./slices/cartListSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    products: productListSlice,\r\n    cartProducts: cartListSlice,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}