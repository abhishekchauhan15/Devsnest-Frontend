{"version":3,"sources":["themeContext.tsx","ToggleTheme.tsx","TodoList.tsx","Todos.tsx","App.tsx","index.tsx"],"names":["intialState","theme","setTheme","ThemeContext","React","createContext","ToggleTheme","useContext","className","onClick","TodoList","title","done","Todos","useState","todos","setTodos","input","setInput","type","value","onChange","e","target","map","todo","index","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKAQMA,G,MAAgC,CACpCC,OAAO,EACPC,SAAU,SAACD,OAKEE,EAFMC,IAAMC,cAAcL,G,OCK1BM,EAdK,WAClB,MAA4BC,qBAA6BJ,GAAjDF,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,wBACEM,UAAWP,EAAQ,oBAAsB,eACzCQ,QAAS,WACPP,GAAUD,IAHd,SAMIA,EAAiB,QAAT,U,OCEDS,EARE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAiC,EAA1BC,KACzB,OACE,8BACE,6BAAKD,OC6BIE,EA7BD,WACZ,MAA0BC,mBAAqB,IAA/C,mBAAOC,EAAP,KAAcC,EAAd,KACQf,EAAUM,qBAA6BJ,GAAvCF,MACR,EAA0Ba,mBAAiB,IAA3C,mBAAOG,EAAP,KAAcC,EAAd,KAEA,OACE,sBAAKV,UAAWP,EAAQ,aAAe,QAAvC,UACE,uBACEkB,KAAK,OACLC,MAAOH,EACPI,SAAU,SAACC,GACTJ,EAASI,EAAEC,OAAOH,UAGtB,wBACEX,QAAS,WACPO,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEJ,MAAOM,EAAOL,MAAM,MAC1CM,EAAS,KAHb,uBAQCH,EAAMS,KAAI,SAACC,EAAMC,GAChB,OAAO,cAAC,EAAD,CAAsBf,MAAOc,EAAKd,MAAOC,KAAMa,EAAKb,MAArCc,UCbfC,EAZH,WACV,MAA0Bb,oBAAS,GAAnC,mBAAOb,EAAP,KAAcC,EAAd,KACA,OACE,cAAC,EAAa0B,SAAd,CAAuBR,MAAO,CAAEnB,QAAOC,YAAvC,SACE,sBAAKM,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCVRqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d4b33cd1.chunk.js","sourcesContent":["// import { createContext } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport interface ThemeContextType {\r\n  theme: boolean;\r\n  setTheme: (theme: boolean) => void;\r\n}\r\n\r\nconst intialState: ThemeContextType = {\r\n  theme: false,\r\n  setTheme: (theme) => {},\r\n};\r\n\r\nconst ThemeContext = React.createContext(intialState);\r\n\r\nexport default ThemeContext;\r\n","import ThemeContext from \"./themeContext\";\r\nimport { ThemeContextType } from \"./themeContext\";\r\nimport { useContext } from \"react\";\r\n\r\nconst ToggleTheme = () => {\r\n  const { theme, setTheme } = useContext<ThemeContextType>(ThemeContext);\r\n  return (\r\n    <button\r\n      className={theme ? \"toggle-theme dark\" : \"toggle-theme\"}\r\n      onClick={() => {\r\n        setTheme(!theme);\r\n      }}\r\n    >\r\n      {!theme ? \"dark\" : \"light\"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ToggleTheme;\r\n","import React from \"react\";\r\n\r\ninterface TodoListProps {\r\n  title: string;\r\n  done: boolean;\r\n}\r\n\r\nconst TodoList = ({ title, done }: TodoListProps) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useContext } from \"react\";\r\nimport TodoList from \"./TodoList\";\r\nimport ThemeContext from \"./themeContext\";\r\nimport { ThemeContextType } from \"./themeContext\";\r\n\r\ninterface TodoType {\r\n  title: string;\r\n  done: boolean;\r\n}\r\n\r\nconst Todos = () => {\r\n  const [todos, setTodos] = useState<TodoType[]>([]);\r\n  const { theme } = useContext<ThemeContextType>(ThemeContext);\r\n  const [input, setInput] = useState<string>(\"\");\r\n\r\n  return (\r\n    <div className={theme ? \"todos dark\" : \"todos\"}>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => {\r\n          setInput(e.target.value);\r\n        }}\r\n      ></input>\r\n      <button\r\n        onClick={() => {\r\n          setTodos([...todos, { title: input, done: false }]);\r\n          setInput(\"\");\r\n        }}\r\n      >\r\n        Add todos\r\n      </button>\r\n      {todos.map((todo, index) => {\r\n        return <TodoList key={index} title={todo.title} done={todo.done} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { useState } from \"react\";\nimport ThemeContext from \"./themeContext\";\nimport ToggleTheme from \"./ToggleTheme\";\nimport Todos from \"./Todos\";\n\nconst App = () => {\n  const [theme, setTheme] = useState(false);\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      <div className=\"App\">\n        <Todos />\n        <ToggleTheme />\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}